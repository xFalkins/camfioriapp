const cds = require ('../..'), minified = csn => cds.linked(csn).minified()
const cdsc = require ('../cdsc')
const {unfold_ddl} = cds.alpha_localized


function cds_compile_to_sql (csn,_o) {
  const o = cdsc._options.for.sql(_o) //> used twice below...
  const all = cdsc.to.sql (minified(csn),o)
  const sql = unfold_ddl (all.map (each => each
    .replace(/^-- .+\n/,'')  //> strip comments
  ), csn, o)
  if (o.as === 'str') return `\n${sql.join('\n\n')}\n`
  return sql
}


function cds_compile_to_hdbtable (csn,o) {
  const all = cdsc.to.hdi (minified(csn),o)
  return _2many(all)
}


function cds_compile_to_hdbcds (csn,o) {
  const all = cdsc.to.hdbcds (minified(csn),o)
  const constructFileName = (fileName) => {
    const identifier = fileName.split('.');
    const suffix = identifier.pop();
    return identifier.join('_').concat(`.${suffix}`);
  }
  return _2many(all, constructFileName);
}

function* _2many (all,_file=f=>f) {
  for (let file in all) yield [
    all[file].replace(/^(\/\/|--) generated by .+\n/,''),
    { file:_file(file) }
  ]
}

module.exports = Object.assign (cds_compile_to_sql, {
  hdbcds: cds_compile_to_hdbcds,
  hdbtable: cds_compile_to_hdbtable,
})
