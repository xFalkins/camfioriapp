// global.cds is used on purpose here!
const cds = global.cds

const ODATA_CONTAINED = '@odata.contained'

const { isMandatory, isReadOnly } = require('./utils')

module.exports = class {
  get _isAssociationStrict() {
    return (
      this.own('__isAssociationStrict') ||
      this.set('__isAssociationStrict', !!(this.isAssociation && !this.isComposition))
    )
  }

  get _isAssociationEffective() {
    return (
      this.own('__isAssociationEffective') ||
      this.set(
        '__isAssociationEffective',
        this._isAssociationStrict && (!this[ODATA_CONTAINED] || this.name === 'DraftAdministrativeData')
      )
    )
  }

  get _isCompositionEffective() {
    return (
      this.own('__isCompositionEffective') ||
      this.set(
        '__isCompositionEffective',
        this.isComposition ||
          (this._isAssociationStrict && this[ODATA_CONTAINED] && this.name !== 'DraftAdministrativeData')
      )
    )
  }

  get _isStructured() {
    return this.own('__isStructured') || this.set('__isStructured', !!this.elements && this.kind !== 'entity')
  }

  get _isContained() {
    return (
      this.own('__isContained') ||
      this.set(
        '__isContained',
        this.name !== 'DraftAdministrativeData_DraftUUID' &&
          ((this.isAssociation && this[ODATA_CONTAINED]) || (this.isComposition && cds.env.effective.odata.containment))
      )
    )
  }

  get _isMandatory() {
    return this.own('__isMandatory') || this.set('__isMandatory', !this.isAssociation && isMandatory(this))
  }

  get _isReadOnly() {
    return this.own('__isReadOnly') || this.set('__isReadOnly', !this.key && isReadOnly(this))
  }
}
