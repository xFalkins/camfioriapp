const cds = require('../../cds')

// REVISIT: compiler to provide API for smart quoting (not just list)
// require list from compiler
const _COMPILER_RESERVED = {}
try {
  const keywords = require('@sap/cds-compiler/lib/base/keywords')
  _COMPILER_RESERVED.hana = new Set(keywords.hana)
  _COMPILER_RESERVED.sqlite = new Set(keywords.sqlite)
} catch (e) {
  // ignore
}

// fallback
const _DEFAULT_RESERVED = new Set(['WHERE', 'GROUP', 'ORDER', 'BY', 'AT', 'NO', 'LIMIT'])
let RESERVED = _DEFAULT_RESERVED

// exclude list
const EXCLUDE_LIST = new Set(['CURRENT_TIMESTAMP'])

const _slugify = name => name.replace(/\./g, '_')

module.exports = {
  quoted: name => `"${name}"`,
  plain: name => {
    const upper = name.toUpperCase()
    if (EXCLUDE_LIST.has(upper)) return name

    if (cds.db) {
      RESERVED = (cds.env.features.compiler_keywords !== false && _COMPILER_RESERVED[cds.db.kind]) || _DEFAULT_RESERVED
    }

    // REVISIT: _slugify(name) correct? cap-samples' tests needs it this way
    return RESERVED.has(upper) ? `"${upper}"` : _slugify(name)
  },
  'all-upper': name => `"${_slugify(name.toUpperCase())}"`,
  'all-lower': name => `"${_slugify(name.toLowerCase())}"`,
  bracketed: name => `[${name}]`
}
