const { getNavigationIfStruct } = require('./structured')
const getColumns = require('../../db/utils/columns')
const _isAsteriskCol = col => col === '*' || (col.ref && col.ref[0] === '*')

const _isDraft = req => {
  return (
    req.target &&
    ((typeof req.target.name === 'string' && req.target.name.endsWith('_drafts')) ||
      typeof req.target.name === 'object') // > union, which is (currently) only the case with draft
  )
}

const _rewriteExpandAsterisks = (expand, entity, refs) => {
  const navigation = getNavigationIfStruct(entity, refs)
  const targetEntity = navigation._target

  expand.forEach(col => {
    if (col.ref && col.expand) {
      _rewriteExpandAsterisks(col.expand, targetEntity, col.ref)
    }
  })

  const asteriskColumnIndex = expand.findIndex(col => _isAsteriskCol(col))

  if (asteriskColumnIndex !== -1) {
    expand.splice(asteriskColumnIndex, 1)
    getColumns(targetEntity).forEach(col => {
      expand.push({ ref: [col.name] })
    })
  }
}

const _rewriteAsterisks = req => {
  if (!_isDraft(req) && req.query.SELECT && req.query.SELECT.columns) {
    const asteriskColumnIndex = req.query.SELECT.columns.findIndex(col => _isAsteriskCol(col))

    if (asteriskColumnIndex !== -1) {
      req.query.SELECT.columns.splice(asteriskColumnIndex, 1)
      getColumns(req.target).forEach(col => {
        req.query.SELECT.columns.push({ ref: [col.name] })
      })
    }

    req.query.SELECT.columns.forEach(col => {
      if (col.ref && col.ref[0] !== 'DraftAdministrativeData' && col.expand && req.target) {
        _rewriteExpandAsterisks(col.expand, req.target, col.ref)
      }
    })
  }
}

module.exports = _rewriteAsterisks
